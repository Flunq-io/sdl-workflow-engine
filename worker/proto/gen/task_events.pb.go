// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: task_events.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TaskScheduledEvent represents a task that has been scheduled for execution
type TaskScheduledEvent struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TenantId       string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	WorkflowId     string                 `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	ExecutionId    string                 `protobuf:"bytes,3,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	TaskId         string                 `protobuf:"bytes,4,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	TaskName       string                 `protobuf:"bytes,5,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	TaskType       string                 `protobuf:"bytes,6,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	TaskDefinition *structpb.Struct       `protobuf:"bytes,7,opt,name=task_definition,json=taskDefinition,proto3" json:"task_definition,omitempty"`
	InputData      *structpb.Struct       `protobuf:"bytes,8,opt,name=input_data,json=inputData,proto3" json:"input_data,omitempty"`
	ScheduledAt    *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=scheduled_at,json=scheduledAt,proto3" json:"scheduled_at,omitempty"`
	ScheduledBy    string                 `protobuf:"bytes,10,opt,name=scheduled_by,json=scheduledBy,proto3" json:"scheduled_by,omitempty"`
	RetryCount     int32                  `protobuf:"varint,11,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`
	CorrelationId  string                 `protobuf:"bytes,12,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TaskScheduledEvent) Reset() {
	*x = TaskScheduledEvent{}
	mi := &file_task_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskScheduledEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskScheduledEvent) ProtoMessage() {}

func (x *TaskScheduledEvent) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskScheduledEvent.ProtoReflect.Descriptor instead.
func (*TaskScheduledEvent) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{0}
}

func (x *TaskScheduledEvent) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *TaskScheduledEvent) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *TaskScheduledEvent) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *TaskScheduledEvent) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskScheduledEvent) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *TaskScheduledEvent) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *TaskScheduledEvent) GetTaskDefinition() *structpb.Struct {
	if x != nil {
		return x.TaskDefinition
	}
	return nil
}

func (x *TaskScheduledEvent) GetInputData() *structpb.Struct {
	if x != nil {
		return x.InputData
	}
	return nil
}

func (x *TaskScheduledEvent) GetScheduledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledAt
	}
	return nil
}

func (x *TaskScheduledEvent) GetScheduledBy() string {
	if x != nil {
		return x.ScheduledBy
	}
	return ""
}

func (x *TaskScheduledEvent) GetRetryCount() int32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *TaskScheduledEvent) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

// TaskStartedEvent represents a task that has begun execution
type TaskStartedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	WorkflowId    string                 `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	ExecutionId   string                 `protobuf:"bytes,3,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	TaskId        string                 `protobuf:"bytes,4,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	TaskName      string                 `protobuf:"bytes,5,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	TaskType      string                 `protobuf:"bytes,6,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	InputData     *structpb.Struct       `protobuf:"bytes,7,opt,name=input_data,json=inputData,proto3" json:"input_data,omitempty"`
	StartedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	WorkerId      string                 `protobuf:"bytes,9,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	WorkerVersion string                 `protobuf:"bytes,10,opt,name=worker_version,json=workerVersion,proto3" json:"worker_version,omitempty"`
	AttemptNumber int32                  `protobuf:"varint,11,opt,name=attempt_number,json=attemptNumber,proto3" json:"attempt_number,omitempty"`
	CorrelationId string                 `protobuf:"bytes,12,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskStartedEvent) Reset() {
	*x = TaskStartedEvent{}
	mi := &file_task_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskStartedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskStartedEvent) ProtoMessage() {}

func (x *TaskStartedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskStartedEvent.ProtoReflect.Descriptor instead.
func (*TaskStartedEvent) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{1}
}

func (x *TaskStartedEvent) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *TaskStartedEvent) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *TaskStartedEvent) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *TaskStartedEvent) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskStartedEvent) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *TaskStartedEvent) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *TaskStartedEvent) GetInputData() *structpb.Struct {
	if x != nil {
		return x.InputData
	}
	return nil
}

func (x *TaskStartedEvent) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *TaskStartedEvent) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *TaskStartedEvent) GetWorkerVersion() string {
	if x != nil {
		return x.WorkerVersion
	}
	return ""
}

func (x *TaskStartedEvent) GetAttemptNumber() int32 {
	if x != nil {
		return x.AttemptNumber
	}
	return 0
}

func (x *TaskStartedEvent) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

// TaskCompletedEventV2 represents a task that has completed successfully (extended version)
type TaskCompletedEventV2 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	WorkflowId    string                 `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	ExecutionId   string                 `protobuf:"bytes,3,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	TaskId        string                 `protobuf:"bytes,4,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	TaskName      string                 `protobuf:"bytes,5,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	TaskType      string                 `protobuf:"bytes,6,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	InputData     *structpb.Struct       `protobuf:"bytes,7,opt,name=input_data,json=inputData,proto3" json:"input_data,omitempty"`
	OutputData    *structpb.Struct       `protobuf:"bytes,8,opt,name=output_data,json=outputData,proto3" json:"output_data,omitempty"`
	StartedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	CompletedAt   *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	WorkerId      string                 `protobuf:"bytes,11,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	DurationMs    int64                  `protobuf:"varint,12,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	CorrelationId string                 `protobuf:"bytes,13,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskCompletedEventV2) Reset() {
	*x = TaskCompletedEventV2{}
	mi := &file_task_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskCompletedEventV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskCompletedEventV2) ProtoMessage() {}

func (x *TaskCompletedEventV2) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskCompletedEventV2.ProtoReflect.Descriptor instead.
func (*TaskCompletedEventV2) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{2}
}

func (x *TaskCompletedEventV2) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *TaskCompletedEventV2) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *TaskCompletedEventV2) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *TaskCompletedEventV2) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskCompletedEventV2) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *TaskCompletedEventV2) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *TaskCompletedEventV2) GetInputData() *structpb.Struct {
	if x != nil {
		return x.InputData
	}
	return nil
}

func (x *TaskCompletedEventV2) GetOutputData() *structpb.Struct {
	if x != nil {
		return x.OutputData
	}
	return nil
}

func (x *TaskCompletedEventV2) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *TaskCompletedEventV2) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *TaskCompletedEventV2) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *TaskCompletedEventV2) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

func (x *TaskCompletedEventV2) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

// TaskFailedEvent represents a task that has failed
type TaskFailedEvent struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TenantId        string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	WorkflowId      string                 `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	ExecutionId     string                 `protobuf:"bytes,3,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	TaskId          string                 `protobuf:"bytes,4,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	TaskName        string                 `protobuf:"bytes,5,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	TaskType        string                 `protobuf:"bytes,6,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	InputData       *structpb.Struct       `protobuf:"bytes,7,opt,name=input_data,json=inputData,proto3" json:"input_data,omitempty"`
	StartedAt       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	FailedAt        *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=failed_at,json=failedAt,proto3" json:"failed_at,omitempty"`
	WorkerId        string                 `protobuf:"bytes,10,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	ErrorType       string                 `protobuf:"bytes,11,opt,name=error_type,json=errorType,proto3" json:"error_type,omitempty"`
	ErrorMessage    string                 `protobuf:"bytes,12,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	ErrorStackTrace string                 `protobuf:"bytes,13,opt,name=error_stack_trace,json=errorStackTrace,proto3" json:"error_stack_trace,omitempty"`
	AttemptNumber   int32                  `protobuf:"varint,14,opt,name=attempt_number,json=attemptNumber,proto3" json:"attempt_number,omitempty"`
	WillRetry       bool                   `protobuf:"varint,15,opt,name=will_retry,json=willRetry,proto3" json:"will_retry,omitempty"`
	NextRetryAt     *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=next_retry_at,json=nextRetryAt,proto3" json:"next_retry_at,omitempty"`
	CorrelationId   string                 `protobuf:"bytes,17,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TaskFailedEvent) Reset() {
	*x = TaskFailedEvent{}
	mi := &file_task_events_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskFailedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskFailedEvent) ProtoMessage() {}

func (x *TaskFailedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskFailedEvent.ProtoReflect.Descriptor instead.
func (*TaskFailedEvent) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{3}
}

func (x *TaskFailedEvent) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *TaskFailedEvent) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *TaskFailedEvent) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *TaskFailedEvent) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskFailedEvent) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *TaskFailedEvent) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *TaskFailedEvent) GetInputData() *structpb.Struct {
	if x != nil {
		return x.InputData
	}
	return nil
}

func (x *TaskFailedEvent) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *TaskFailedEvent) GetFailedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FailedAt
	}
	return nil
}

func (x *TaskFailedEvent) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *TaskFailedEvent) GetErrorType() string {
	if x != nil {
		return x.ErrorType
	}
	return ""
}

func (x *TaskFailedEvent) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *TaskFailedEvent) GetErrorStackTrace() string {
	if x != nil {
		return x.ErrorStackTrace
	}
	return ""
}

func (x *TaskFailedEvent) GetAttemptNumber() int32 {
	if x != nil {
		return x.AttemptNumber
	}
	return 0
}

func (x *TaskFailedEvent) GetWillRetry() bool {
	if x != nil {
		return x.WillRetry
	}
	return false
}

func (x *TaskFailedEvent) GetNextRetryAt() *timestamppb.Timestamp {
	if x != nil {
		return x.NextRetryAt
	}
	return nil
}

func (x *TaskFailedEvent) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

// ExecutionStartedEvent represents a workflow execution that has started
type ExecutionStartedEvent struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TenantId        string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	WorkflowId      string                 `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	ExecutionId     string                 `protobuf:"bytes,3,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	WorkflowName    string                 `protobuf:"bytes,4,opt,name=workflow_name,json=workflowName,proto3" json:"workflow_name,omitempty"`
	WorkflowVersion string                 `protobuf:"bytes,5,opt,name=workflow_version,json=workflowVersion,proto3" json:"workflow_version,omitempty"`
	InputData       *structpb.Struct       `protobuf:"bytes,6,opt,name=input_data,json=inputData,proto3" json:"input_data,omitempty"`
	StartedAt       *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	StartedBy       string                 `protobuf:"bytes,8,opt,name=started_by,json=startedBy,proto3" json:"started_by,omitempty"`
	CorrelationId   string                 `protobuf:"bytes,9,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	Tags            []string               `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`
	Metadata        *structpb.Struct       `protobuf:"bytes,11,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ExecutionStartedEvent) Reset() {
	*x = ExecutionStartedEvent{}
	mi := &file_task_events_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutionStartedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionStartedEvent) ProtoMessage() {}

func (x *ExecutionStartedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionStartedEvent.ProtoReflect.Descriptor instead.
func (*ExecutionStartedEvent) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{4}
}

func (x *ExecutionStartedEvent) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ExecutionStartedEvent) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *ExecutionStartedEvent) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *ExecutionStartedEvent) GetWorkflowName() string {
	if x != nil {
		return x.WorkflowName
	}
	return ""
}

func (x *ExecutionStartedEvent) GetWorkflowVersion() string {
	if x != nil {
		return x.WorkflowVersion
	}
	return ""
}

func (x *ExecutionStartedEvent) GetInputData() *structpb.Struct {
	if x != nil {
		return x.InputData
	}
	return nil
}

func (x *ExecutionStartedEvent) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *ExecutionStartedEvent) GetStartedBy() string {
	if x != nil {
		return x.StartedBy
	}
	return ""
}

func (x *ExecutionStartedEvent) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *ExecutionStartedEvent) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ExecutionStartedEvent) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// ExecutionCompletedEvent represents a workflow execution that has completed
type ExecutionCompletedEvent struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TenantId       string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	WorkflowId     string                 `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	ExecutionId    string                 `protobuf:"bytes,3,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	InputData      *structpb.Struct       `protobuf:"bytes,4,opt,name=input_data,json=inputData,proto3" json:"input_data,omitempty"`
	OutputData     *structpb.Struct       `protobuf:"bytes,5,opt,name=output_data,json=outputData,proto3" json:"output_data,omitempty"`
	StartedAt      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	CompletedAt    *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	DurationMs     int64                  `protobuf:"varint,8,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	TotalTasks     int32                  `protobuf:"varint,9,opt,name=total_tasks,json=totalTasks,proto3" json:"total_tasks,omitempty"`
	CompletedTasks int32                  `protobuf:"varint,10,opt,name=completed_tasks,json=completedTasks,proto3" json:"completed_tasks,omitempty"`
	FailedTasks    int32                  `protobuf:"varint,11,opt,name=failed_tasks,json=failedTasks,proto3" json:"failed_tasks,omitempty"`
	CorrelationId  string                 `protobuf:"bytes,12,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ExecutionCompletedEvent) Reset() {
	*x = ExecutionCompletedEvent{}
	mi := &file_task_events_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutionCompletedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionCompletedEvent) ProtoMessage() {}

func (x *ExecutionCompletedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionCompletedEvent.ProtoReflect.Descriptor instead.
func (*ExecutionCompletedEvent) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{5}
}

func (x *ExecutionCompletedEvent) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ExecutionCompletedEvent) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *ExecutionCompletedEvent) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *ExecutionCompletedEvent) GetInputData() *structpb.Struct {
	if x != nil {
		return x.InputData
	}
	return nil
}

func (x *ExecutionCompletedEvent) GetOutputData() *structpb.Struct {
	if x != nil {
		return x.OutputData
	}
	return nil
}

func (x *ExecutionCompletedEvent) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *ExecutionCompletedEvent) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *ExecutionCompletedEvent) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

func (x *ExecutionCompletedEvent) GetTotalTasks() int32 {
	if x != nil {
		return x.TotalTasks
	}
	return 0
}

func (x *ExecutionCompletedEvent) GetCompletedTasks() int32 {
	if x != nil {
		return x.CompletedTasks
	}
	return 0
}

func (x *ExecutionCompletedEvent) GetFailedTasks() int32 {
	if x != nil {
		return x.FailedTasks
	}
	return 0
}

func (x *ExecutionCompletedEvent) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

var File_task_events_proto protoreflect.FileDescriptor

const file_task_events_proto_rawDesc = "" +
	"\n" +
	"\x11task_events.proto\x12\x0fflunq.worker.v1\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xec\x03\n" +
	"\x12TaskScheduledEvent\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x12!\n" +
	"\fexecution_id\x18\x03 \x01(\tR\vexecutionId\x12\x17\n" +
	"\atask_id\x18\x04 \x01(\tR\x06taskId\x12\x1b\n" +
	"\ttask_name\x18\x05 \x01(\tR\btaskName\x12\x1b\n" +
	"\ttask_type\x18\x06 \x01(\tR\btaskType\x12@\n" +
	"\x0ftask_definition\x18\a \x01(\v2\x17.google.protobuf.StructR\x0etaskDefinition\x126\n" +
	"\n" +
	"input_data\x18\b \x01(\v2\x17.google.protobuf.StructR\tinputData\x12=\n" +
	"\fscheduled_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\vscheduledAt\x12!\n" +
	"\fscheduled_by\x18\n" +
	" \x01(\tR\vscheduledBy\x12\x1f\n" +
	"\vretry_count\x18\v \x01(\x05R\n" +
	"retryCount\x12%\n" +
	"\x0ecorrelation_id\x18\f \x01(\tR\rcorrelationId\"\xcb\x03\n" +
	"\x10TaskStartedEvent\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x12!\n" +
	"\fexecution_id\x18\x03 \x01(\tR\vexecutionId\x12\x17\n" +
	"\atask_id\x18\x04 \x01(\tR\x06taskId\x12\x1b\n" +
	"\ttask_name\x18\x05 \x01(\tR\btaskName\x12\x1b\n" +
	"\ttask_type\x18\x06 \x01(\tR\btaskType\x126\n" +
	"\n" +
	"input_data\x18\a \x01(\v2\x17.google.protobuf.StructR\tinputData\x129\n" +
	"\n" +
	"started_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12\x1b\n" +
	"\tworker_id\x18\t \x01(\tR\bworkerId\x12%\n" +
	"\x0eworker_version\x18\n" +
	" \x01(\tR\rworkerVersion\x12%\n" +
	"\x0eattempt_number\x18\v \x01(\x05R\rattemptNumber\x12%\n" +
	"\x0ecorrelation_id\x18\f \x01(\tR\rcorrelationId\"\x9b\x04\n" +
	"\x14TaskCompletedEventV2\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x12!\n" +
	"\fexecution_id\x18\x03 \x01(\tR\vexecutionId\x12\x17\n" +
	"\atask_id\x18\x04 \x01(\tR\x06taskId\x12\x1b\n" +
	"\ttask_name\x18\x05 \x01(\tR\btaskName\x12\x1b\n" +
	"\ttask_type\x18\x06 \x01(\tR\btaskType\x126\n" +
	"\n" +
	"input_data\x18\a \x01(\v2\x17.google.protobuf.StructR\tinputData\x128\n" +
	"\voutput_data\x18\b \x01(\v2\x17.google.protobuf.StructR\n" +
	"outputData\x129\n" +
	"\n" +
	"started_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12=\n" +
	"\fcompleted_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\x12\x1b\n" +
	"\tworker_id\x18\v \x01(\tR\bworkerId\x12\x1f\n" +
	"\vduration_ms\x18\f \x01(\x03R\n" +
	"durationMs\x12%\n" +
	"\x0ecorrelation_id\x18\r \x01(\tR\rcorrelationId\"\xab\x05\n" +
	"\x0fTaskFailedEvent\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x12!\n" +
	"\fexecution_id\x18\x03 \x01(\tR\vexecutionId\x12\x17\n" +
	"\atask_id\x18\x04 \x01(\tR\x06taskId\x12\x1b\n" +
	"\ttask_name\x18\x05 \x01(\tR\btaskName\x12\x1b\n" +
	"\ttask_type\x18\x06 \x01(\tR\btaskType\x126\n" +
	"\n" +
	"input_data\x18\a \x01(\v2\x17.google.protobuf.StructR\tinputData\x129\n" +
	"\n" +
	"started_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x127\n" +
	"\tfailed_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\bfailedAt\x12\x1b\n" +
	"\tworker_id\x18\n" +
	" \x01(\tR\bworkerId\x12\x1d\n" +
	"\n" +
	"error_type\x18\v \x01(\tR\terrorType\x12#\n" +
	"\rerror_message\x18\f \x01(\tR\ferrorMessage\x12*\n" +
	"\x11error_stack_trace\x18\r \x01(\tR\x0ferrorStackTrace\x12%\n" +
	"\x0eattempt_number\x18\x0e \x01(\x05R\rattemptNumber\x12\x1d\n" +
	"\n" +
	"will_retry\x18\x0f \x01(\bR\twillRetry\x12>\n" +
	"\rnext_retry_at\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\vnextRetryAt\x12%\n" +
	"\x0ecorrelation_id\x18\x11 \x01(\tR\rcorrelationId\"\xca\x03\n" +
	"\x15ExecutionStartedEvent\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x12!\n" +
	"\fexecution_id\x18\x03 \x01(\tR\vexecutionId\x12#\n" +
	"\rworkflow_name\x18\x04 \x01(\tR\fworkflowName\x12)\n" +
	"\x10workflow_version\x18\x05 \x01(\tR\x0fworkflowVersion\x126\n" +
	"\n" +
	"input_data\x18\x06 \x01(\v2\x17.google.protobuf.StructR\tinputData\x129\n" +
	"\n" +
	"started_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12\x1d\n" +
	"\n" +
	"started_by\x18\b \x01(\tR\tstartedBy\x12%\n" +
	"\x0ecorrelation_id\x18\t \x01(\tR\rcorrelationId\x12\x12\n" +
	"\x04tags\x18\n" +
	" \x03(\tR\x04tags\x123\n" +
	"\bmetadata\x18\v \x01(\v2\x17.google.protobuf.StructR\bmetadata\"\x9b\x04\n" +
	"\x17ExecutionCompletedEvent\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x12!\n" +
	"\fexecution_id\x18\x03 \x01(\tR\vexecutionId\x126\n" +
	"\n" +
	"input_data\x18\x04 \x01(\v2\x17.google.protobuf.StructR\tinputData\x128\n" +
	"\voutput_data\x18\x05 \x01(\v2\x17.google.protobuf.StructR\n" +
	"outputData\x129\n" +
	"\n" +
	"started_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12=\n" +
	"\fcompleted_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\x12\x1f\n" +
	"\vduration_ms\x18\b \x01(\x03R\n" +
	"durationMs\x12\x1f\n" +
	"\vtotal_tasks\x18\t \x01(\x05R\n" +
	"totalTasks\x12'\n" +
	"\x0fcompleted_tasks\x18\n" +
	" \x01(\x05R\x0ecompletedTasks\x12!\n" +
	"\ffailed_tasks\x18\v \x01(\x05R\vfailedTasks\x12%\n" +
	"\x0ecorrelation_id\x18\f \x01(\tR\rcorrelationIdB&Z$github.com/flunq-io/worker/proto/genb\x06proto3"

var (
	file_task_events_proto_rawDescOnce sync.Once
	file_task_events_proto_rawDescData []byte
)

func file_task_events_proto_rawDescGZIP() []byte {
	file_task_events_proto_rawDescOnce.Do(func() {
		file_task_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_task_events_proto_rawDesc), len(file_task_events_proto_rawDesc)))
	})
	return file_task_events_proto_rawDescData
}

var file_task_events_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_task_events_proto_goTypes = []any{
	(*TaskScheduledEvent)(nil),      // 0: flunq.worker.v1.TaskScheduledEvent
	(*TaskStartedEvent)(nil),        // 1: flunq.worker.v1.TaskStartedEvent
	(*TaskCompletedEventV2)(nil),    // 2: flunq.worker.v1.TaskCompletedEventV2
	(*TaskFailedEvent)(nil),         // 3: flunq.worker.v1.TaskFailedEvent
	(*ExecutionStartedEvent)(nil),   // 4: flunq.worker.v1.ExecutionStartedEvent
	(*ExecutionCompletedEvent)(nil), // 5: flunq.worker.v1.ExecutionCompletedEvent
	(*structpb.Struct)(nil),         // 6: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil),   // 7: google.protobuf.Timestamp
}
var file_task_events_proto_depIdxs = []int32{
	6,  // 0: flunq.worker.v1.TaskScheduledEvent.task_definition:type_name -> google.protobuf.Struct
	6,  // 1: flunq.worker.v1.TaskScheduledEvent.input_data:type_name -> google.protobuf.Struct
	7,  // 2: flunq.worker.v1.TaskScheduledEvent.scheduled_at:type_name -> google.protobuf.Timestamp
	6,  // 3: flunq.worker.v1.TaskStartedEvent.input_data:type_name -> google.protobuf.Struct
	7,  // 4: flunq.worker.v1.TaskStartedEvent.started_at:type_name -> google.protobuf.Timestamp
	6,  // 5: flunq.worker.v1.TaskCompletedEventV2.input_data:type_name -> google.protobuf.Struct
	6,  // 6: flunq.worker.v1.TaskCompletedEventV2.output_data:type_name -> google.protobuf.Struct
	7,  // 7: flunq.worker.v1.TaskCompletedEventV2.started_at:type_name -> google.protobuf.Timestamp
	7,  // 8: flunq.worker.v1.TaskCompletedEventV2.completed_at:type_name -> google.protobuf.Timestamp
	6,  // 9: flunq.worker.v1.TaskFailedEvent.input_data:type_name -> google.protobuf.Struct
	7,  // 10: flunq.worker.v1.TaskFailedEvent.started_at:type_name -> google.protobuf.Timestamp
	7,  // 11: flunq.worker.v1.TaskFailedEvent.failed_at:type_name -> google.protobuf.Timestamp
	7,  // 12: flunq.worker.v1.TaskFailedEvent.next_retry_at:type_name -> google.protobuf.Timestamp
	6,  // 13: flunq.worker.v1.ExecutionStartedEvent.input_data:type_name -> google.protobuf.Struct
	7,  // 14: flunq.worker.v1.ExecutionStartedEvent.started_at:type_name -> google.protobuf.Timestamp
	6,  // 15: flunq.worker.v1.ExecutionStartedEvent.metadata:type_name -> google.protobuf.Struct
	6,  // 16: flunq.worker.v1.ExecutionCompletedEvent.input_data:type_name -> google.protobuf.Struct
	6,  // 17: flunq.worker.v1.ExecutionCompletedEvent.output_data:type_name -> google.protobuf.Struct
	7,  // 18: flunq.worker.v1.ExecutionCompletedEvent.started_at:type_name -> google.protobuf.Timestamp
	7,  // 19: flunq.worker.v1.ExecutionCompletedEvent.completed_at:type_name -> google.protobuf.Timestamp
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_task_events_proto_init() }
func file_task_events_proto_init() {
	if File_task_events_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_task_events_proto_rawDesc), len(file_task_events_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_task_events_proto_goTypes,
		DependencyIndexes: file_task_events_proto_depIdxs,
		MessageInfos:      file_task_events_proto_msgTypes,
	}.Build()
	File_task_events_proto = out.File
	file_task_events_proto_goTypes = nil
	file_task_events_proto_depIdxs = nil
}
