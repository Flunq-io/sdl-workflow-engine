// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: workflow_events.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TaskStatus represents the status of a task execution
type TaskStatus int32

const (
	TaskStatus_TASK_STATUS_UNSPECIFIED TaskStatus = 0
	TaskStatus_TASK_STATUS_PENDING     TaskStatus = 1
	TaskStatus_TASK_STATUS_RUNNING     TaskStatus = 2
	TaskStatus_TASK_STATUS_COMPLETED   TaskStatus = 3
	TaskStatus_TASK_STATUS_FAILED      TaskStatus = 4
	TaskStatus_TASK_STATUS_CANCELLED   TaskStatus = 5
	TaskStatus_TASK_STATUS_RETRYING    TaskStatus = 6
)

// Enum value maps for TaskStatus.
var (
	TaskStatus_name = map[int32]string{
		0: "TASK_STATUS_UNSPECIFIED",
		1: "TASK_STATUS_PENDING",
		2: "TASK_STATUS_RUNNING",
		3: "TASK_STATUS_COMPLETED",
		4: "TASK_STATUS_FAILED",
		5: "TASK_STATUS_CANCELLED",
		6: "TASK_STATUS_RETRYING",
	}
	TaskStatus_value = map[string]int32{
		"TASK_STATUS_UNSPECIFIED": 0,
		"TASK_STATUS_PENDING":     1,
		"TASK_STATUS_RUNNING":     2,
		"TASK_STATUS_COMPLETED":   3,
		"TASK_STATUS_FAILED":      4,
		"TASK_STATUS_CANCELLED":   5,
		"TASK_STATUS_RETRYING":    6,
	}
)

func (x TaskStatus) Enum() *TaskStatus {
	p := new(TaskStatus)
	*p = x
	return p
}

func (x TaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_workflow_events_proto_enumTypes[0].Descriptor()
}

func (TaskStatus) Type() protoreflect.EnumType {
	return &file_workflow_events_proto_enumTypes[0]
}

func (x TaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskStatus.Descriptor instead.
func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_workflow_events_proto_rawDescGZIP(), []int{0}
}

// WorkflowStatus represents the status of a workflow (SDL compliant)
type WorkflowStatus int32

const (
	WorkflowStatus_WORKFLOW_STATUS_UNSPECIFIED WorkflowStatus = 0
	WorkflowStatus_WORKFLOW_STATUS_CREATED     WorkflowStatus = 1 // pending - initiated and pending execution
	WorkflowStatus_WORKFLOW_STATUS_RUNNING     WorkflowStatus = 2 // running - currently in progress
	WorkflowStatus_WORKFLOW_STATUS_COMPLETED   WorkflowStatus = 3 // completed - ran to completion
	WorkflowStatus_WORKFLOW_STATUS_FAILED      WorkflowStatus = 4 // faulted - encountered an error
	WorkflowStatus_WORKFLOW_STATUS_CANCELLED   WorkflowStatus = 5 // cancelled - terminated before completion
	WorkflowStatus_WORKFLOW_STATUS_SUSPENDED   WorkflowStatus = 6 // suspended - manually paused by user
	WorkflowStatus_WORKFLOW_STATUS_WAITING     WorkflowStatus = 7 // waiting - paused, awaiting events or time
)

// Enum value maps for WorkflowStatus.
var (
	WorkflowStatus_name = map[int32]string{
		0: "WORKFLOW_STATUS_UNSPECIFIED",
		1: "WORKFLOW_STATUS_CREATED",
		2: "WORKFLOW_STATUS_RUNNING",
		3: "WORKFLOW_STATUS_COMPLETED",
		4: "WORKFLOW_STATUS_FAILED",
		5: "WORKFLOW_STATUS_CANCELLED",
		6: "WORKFLOW_STATUS_SUSPENDED",
		7: "WORKFLOW_STATUS_WAITING",
	}
	WorkflowStatus_value = map[string]int32{
		"WORKFLOW_STATUS_UNSPECIFIED": 0,
		"WORKFLOW_STATUS_CREATED":     1,
		"WORKFLOW_STATUS_RUNNING":     2,
		"WORKFLOW_STATUS_COMPLETED":   3,
		"WORKFLOW_STATUS_FAILED":      4,
		"WORKFLOW_STATUS_CANCELLED":   5,
		"WORKFLOW_STATUS_SUSPENDED":   6,
		"WORKFLOW_STATUS_WAITING":     7,
	}
)

func (x WorkflowStatus) Enum() *WorkflowStatus {
	p := new(WorkflowStatus)
	*p = x
	return p
}

func (x WorkflowStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkflowStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_workflow_events_proto_enumTypes[1].Descriptor()
}

func (WorkflowStatus) Type() protoreflect.EnumType {
	return &file_workflow_events_proto_enumTypes[1]
}

func (x WorkflowStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkflowStatus.Descriptor instead.
func (WorkflowStatus) EnumDescriptor() ([]byte, []int) {
	return file_workflow_events_proto_rawDescGZIP(), []int{1}
}

// TaskData represents input/output data for a task
type TaskData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Task input data as JSON
	Input *structpb.Struct `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	// Task output data as JSON
	Output *structpb.Struct `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	// Task metadata
	Metadata      *TaskMetadata `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskData) Reset() {
	*x = TaskData{}
	mi := &file_workflow_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskData) ProtoMessage() {}

func (x *TaskData) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskData.ProtoReflect.Descriptor instead.
func (*TaskData) Descriptor() ([]byte, []int) {
	return file_workflow_events_proto_rawDescGZIP(), []int{0}
}

func (x *TaskData) GetInput() *structpb.Struct {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *TaskData) GetOutput() *structpb.Struct {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *TaskData) GetMetadata() *TaskMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// WorkflowInput represents the initial input to a workflow
type WorkflowInput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Input data provided when workflow was started
	Data *structpb.Struct `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// Execution context
	Context *WorkflowContext `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	// Timestamp when workflow was started
	StartedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkflowInput) Reset() {
	*x = WorkflowInput{}
	mi := &file_workflow_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowInput) ProtoMessage() {}

func (x *WorkflowInput) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowInput.ProtoReflect.Descriptor instead.
func (*WorkflowInput) Descriptor() ([]byte, []int) {
	return file_workflow_events_proto_rawDescGZIP(), []int{1}
}

func (x *WorkflowInput) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *WorkflowInput) GetContext() *WorkflowContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *WorkflowInput) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

// WorkflowOutput represents the final output of a workflow
type WorkflowOutput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Final output data produced by the workflow
	Data *structpb.Struct `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// Execution summary
	Summary *ExecutionSummary `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	// Timestamp when workflow completed
	CompletedAt   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkflowOutput) Reset() {
	*x = WorkflowOutput{}
	mi := &file_workflow_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowOutput) ProtoMessage() {}

func (x *WorkflowOutput) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowOutput.ProtoReflect.Descriptor instead.
func (*WorkflowOutput) Descriptor() ([]byte, []int) {
	return file_workflow_events_proto_rawDescGZIP(), []int{2}
}

func (x *WorkflowOutput) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *WorkflowOutput) GetSummary() *ExecutionSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

func (x *WorkflowOutput) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

// WorkflowContext provides execution context
type WorkflowContext struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique execution ID
	ExecutionId string `protobuf:"bytes,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	// Correlation ID for tracing
	CorrelationId string `protobuf:"bytes,2,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	// What triggered this workflow
	Trigger string `protobuf:"bytes,3,opt,name=trigger,proto3" json:"trigger,omitempty"`
	// Tenant information
	Tenant string `protobuf:"bytes,4,opt,name=tenant,proto3" json:"tenant,omitempty"`
	// User who initiated the workflow
	UserId        string `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkflowContext) Reset() {
	*x = WorkflowContext{}
	mi := &file_workflow_events_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowContext) ProtoMessage() {}

func (x *WorkflowContext) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_events_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowContext.ProtoReflect.Descriptor instead.
func (*WorkflowContext) Descriptor() ([]byte, []int) {
	return file_workflow_events_proto_rawDescGZIP(), []int{3}
}

func (x *WorkflowContext) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *WorkflowContext) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *WorkflowContext) GetTrigger() string {
	if x != nil {
		return x.Trigger
	}
	return ""
}

func (x *WorkflowContext) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *WorkflowContext) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// ExecutionSummary provides high-level execution statistics
type ExecutionSummary struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Total number of tasks executed
	TotalTasks int32 `protobuf:"varint,1,opt,name=total_tasks,json=totalTasks,proto3" json:"total_tasks,omitempty"`
	// Total execution duration in milliseconds
	DurationMs int64 `protobuf:"varint,2,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	// Whether workflow completed successfully
	Success bool `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	// Error message if workflow failed
	ErrorMessage string `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// Number of tasks that completed successfully
	SuccessfulTasks int32 `protobuf:"varint,5,opt,name=successful_tasks,json=successfulTasks,proto3" json:"successful_tasks,omitempty"`
	// Number of tasks that failed
	FailedTasks   int32 `protobuf:"varint,6,opt,name=failed_tasks,json=failedTasks,proto3" json:"failed_tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecutionSummary) Reset() {
	*x = ExecutionSummary{}
	mi := &file_workflow_events_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutionSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionSummary) ProtoMessage() {}

func (x *ExecutionSummary) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_events_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionSummary.ProtoReflect.Descriptor instead.
func (*ExecutionSummary) Descriptor() ([]byte, []int) {
	return file_workflow_events_proto_rawDescGZIP(), []int{4}
}

func (x *ExecutionSummary) GetTotalTasks() int32 {
	if x != nil {
		return x.TotalTasks
	}
	return 0
}

func (x *ExecutionSummary) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

func (x *ExecutionSummary) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ExecutionSummary) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ExecutionSummary) GetSuccessfulTasks() int32 {
	if x != nil {
		return x.SuccessfulTasks
	}
	return 0
}

func (x *ExecutionSummary) GetFailedTasks() int32 {
	if x != nil {
		return x.FailedTasks
	}
	return 0
}

// TaskMetadata contains execution metadata for a task
type TaskMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Task execution start time
	StartedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	// Task execution completion time
	CompletedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	// Task execution duration in milliseconds
	DurationMs int64 `protobuf:"varint,3,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	// Task execution status
	Status TaskStatus `protobuf:"varint,4,opt,name=status,proto3,enum=flunq.worker.v1.TaskStatus" json:"status,omitempty"`
	// Error message if task failed
	ErrorMessage string `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// Retry count
	RetryCount int32 `protobuf:"varint,6,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`
	// Task type (call, run, for, if, switch, try, emit, wait, set)
	TaskType string `protobuf:"bytes,7,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	// Queue name where task was executed
	Queue string `protobuf:"bytes,8,opt,name=queue,proto3" json:"queue,omitempty"`
	// Activity name that executed the task
	ActivityName  string `protobuf:"bytes,9,opt,name=activity_name,json=activityName,proto3" json:"activity_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskMetadata) Reset() {
	*x = TaskMetadata{}
	mi := &file_workflow_events_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskMetadata) ProtoMessage() {}

func (x *TaskMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_events_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskMetadata.ProtoReflect.Descriptor instead.
func (*TaskMetadata) Descriptor() ([]byte, []int) {
	return file_workflow_events_proto_rawDescGZIP(), []int{5}
}

func (x *TaskMetadata) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *TaskMetadata) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *TaskMetadata) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

func (x *TaskMetadata) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *TaskMetadata) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *TaskMetadata) GetRetryCount() int32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *TaskMetadata) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *TaskMetadata) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *TaskMetadata) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

// WorkflowState represents the complete state of a workflow execution
type WorkflowState struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Workflow ID
	WorkflowId string `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	// Current step/state name
	CurrentStep string `protobuf:"bytes,2,opt,name=current_step,json=currentStep,proto3" json:"current_step,omitempty"`
	// Workflow status
	Status WorkflowStatus `protobuf:"varint,3,opt,name=status,proto3,enum=flunq.worker.v1.WorkflowStatus" json:"status,omitempty"`
	// Workflow variables as JSON
	Variables *structpb.Struct `protobuf:"bytes,4,opt,name=variables,proto3" json:"variables,omitempty"`
	// Workflow input data
	Input *structpb.Struct `protobuf:"bytes,5,opt,name=input,proto3" json:"input,omitempty"`
	// Workflow output data (when completed)
	Output *structpb.Struct `protobuf:"bytes,6,opt,name=output,proto3" json:"output,omitempty"`
	// Execution context
	Context *ExecutionContext `protobuf:"bytes,7,opt,name=context,proto3" json:"context,omitempty"`
	// Completed tasks
	CompletedTasks []*CompletedTask `protobuf:"bytes,8,rep,name=completed_tasks,json=completedTasks,proto3" json:"completed_tasks,omitempty"`
	// Pending tasks
	PendingTasks []*PendingTask `protobuf:"bytes,9,rep,name=pending_tasks,json=pendingTasks,proto3" json:"pending_tasks,omitempty"`
	// Workflow creation time
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Last update time
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkflowState) Reset() {
	*x = WorkflowState{}
	mi := &file_workflow_events_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowState) ProtoMessage() {}

func (x *WorkflowState) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_events_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowState.ProtoReflect.Descriptor instead.
func (*WorkflowState) Descriptor() ([]byte, []int) {
	return file_workflow_events_proto_rawDescGZIP(), []int{6}
}

func (x *WorkflowState) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *WorkflowState) GetCurrentStep() string {
	if x != nil {
		return x.CurrentStep
	}
	return ""
}

func (x *WorkflowState) GetStatus() WorkflowStatus {
	if x != nil {
		return x.Status
	}
	return WorkflowStatus_WORKFLOW_STATUS_UNSPECIFIED
}

func (x *WorkflowState) GetVariables() *structpb.Struct {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *WorkflowState) GetInput() *structpb.Struct {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *WorkflowState) GetOutput() *structpb.Struct {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *WorkflowState) GetContext() *ExecutionContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *WorkflowState) GetCompletedTasks() []*CompletedTask {
	if x != nil {
		return x.CompletedTasks
	}
	return nil
}

func (x *WorkflowState) GetPendingTasks() []*PendingTask {
	if x != nil {
		return x.PendingTasks
	}
	return nil
}

func (x *WorkflowState) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *WorkflowState) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// ExecutionContext contains workflow execution context
type ExecutionContext struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Execution ID
	ExecutionId string `protobuf:"bytes,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	// Correlation ID
	CorrelationId string `protobuf:"bytes,2,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	// Parent workflow ID (for sub-workflows)
	ParentWorkflowId string `protobuf:"bytes,3,opt,name=parent_workflow_id,json=parentWorkflowId,proto3" json:"parent_workflow_id,omitempty"`
	// Parent task ID (for sub-workflows)
	ParentTaskId string `protobuf:"bytes,4,opt,name=parent_task_id,json=parentTaskId,proto3" json:"parent_task_id,omitempty"`
	// Execution trigger (manual, event, schedule, etc.)
	Trigger string `protobuf:"bytes,5,opt,name=trigger,proto3" json:"trigger,omitempty"`
	// User who initiated the execution
	InitiatedBy string `protobuf:"bytes,6,opt,name=initiated_by,json=initiatedBy,proto3" json:"initiated_by,omitempty"`
	// Tenant/organization ID
	TenantId string `protobuf:"bytes,7,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	// Region
	Region        string `protobuf:"bytes,8,opt,name=region,proto3" json:"region,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecutionContext) Reset() {
	*x = ExecutionContext{}
	mi := &file_workflow_events_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutionContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionContext) ProtoMessage() {}

func (x *ExecutionContext) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_events_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionContext.ProtoReflect.Descriptor instead.
func (*ExecutionContext) Descriptor() ([]byte, []int) {
	return file_workflow_events_proto_rawDescGZIP(), []int{7}
}

func (x *ExecutionContext) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *ExecutionContext) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *ExecutionContext) GetParentWorkflowId() string {
	if x != nil {
		return x.ParentWorkflowId
	}
	return ""
}

func (x *ExecutionContext) GetParentTaskId() string {
	if x != nil {
		return x.ParentTaskId
	}
	return ""
}

func (x *ExecutionContext) GetTrigger() string {
	if x != nil {
		return x.Trigger
	}
	return ""
}

func (x *ExecutionContext) GetInitiatedBy() string {
	if x != nil {
		return x.InitiatedBy
	}
	return ""
}

func (x *ExecutionContext) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ExecutionContext) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

// CompletedTask represents a completed task in the workflow
type CompletedTask struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Task name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Task data (input/output)
	Data *TaskData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	// Next task name (if any)
	NextTask      string `protobuf:"bytes,3,opt,name=next_task,json=nextTask,proto3" json:"next_task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompletedTask) Reset() {
	*x = CompletedTask{}
	mi := &file_workflow_events_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompletedTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompletedTask) ProtoMessage() {}

func (x *CompletedTask) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_events_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompletedTask.ProtoReflect.Descriptor instead.
func (*CompletedTask) Descriptor() ([]byte, []int) {
	return file_workflow_events_proto_rawDescGZIP(), []int{8}
}

func (x *CompletedTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CompletedTask) GetData() *TaskData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CompletedTask) GetNextTask() string {
	if x != nil {
		return x.NextTask
	}
	return ""
}

// PendingTask represents a pending task in the workflow
type PendingTask struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Task name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Task input data
	Input *structpb.Struct `protobuf:"bytes,2,opt,name=input,proto3" json:"input,omitempty"`
	// Task type
	TaskType string `protobuf:"bytes,3,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	// Queue name
	Queue string `protobuf:"bytes,4,opt,name=queue,proto3" json:"queue,omitempty"`
	// Activity name
	ActivityName string `protobuf:"bytes,5,opt,name=activity_name,json=activityName,proto3" json:"activity_name,omitempty"`
	// Task creation time
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PendingTask) Reset() {
	*x = PendingTask{}
	mi := &file_workflow_events_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PendingTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendingTask) ProtoMessage() {}

func (x *PendingTask) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_events_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendingTask.ProtoReflect.Descriptor instead.
func (*PendingTask) Descriptor() ([]byte, []int) {
	return file_workflow_events_proto_rawDescGZIP(), []int{9}
}

func (x *PendingTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PendingTask) GetInput() *structpb.Struct {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *PendingTask) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *PendingTask) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *PendingTask) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *PendingTask) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// WorkflowDefinition represents a Serverless Workflow DSL definition
type WorkflowDefinition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Workflow ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Workflow name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Workflow description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Workflow version
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	// Serverless Workflow spec version
	SpecVersion string `protobuf:"bytes,5,opt,name=spec_version,json=specVersion,proto3" json:"spec_version,omitempty"`
	// Complete DSL definition as JSON
	DslDefinition *structpb.Struct `protobuf:"bytes,6,opt,name=dsl_definition,json=dslDefinition,proto3" json:"dsl_definition,omitempty"`
	// Start state name
	StartState string `protobuf:"bytes,7,opt,name=start_state,json=startState,proto3" json:"start_state,omitempty"`
	// Functions defined in the workflow
	Functions []*FunctionDefinition `protobuf:"bytes,8,rep,name=functions,proto3" json:"functions,omitempty"`
	// Events defined in the workflow
	Events        []*EventDefinition `protobuf:"bytes,9,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkflowDefinition) Reset() {
	*x = WorkflowDefinition{}
	mi := &file_workflow_events_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowDefinition) ProtoMessage() {}

func (x *WorkflowDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_events_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowDefinition.ProtoReflect.Descriptor instead.
func (*WorkflowDefinition) Descriptor() ([]byte, []int) {
	return file_workflow_events_proto_rawDescGZIP(), []int{10}
}

func (x *WorkflowDefinition) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WorkflowDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkflowDefinition) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WorkflowDefinition) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *WorkflowDefinition) GetSpecVersion() string {
	if x != nil {
		return x.SpecVersion
	}
	return ""
}

func (x *WorkflowDefinition) GetDslDefinition() *structpb.Struct {
	if x != nil {
		return x.DslDefinition
	}
	return nil
}

func (x *WorkflowDefinition) GetStartState() string {
	if x != nil {
		return x.StartState
	}
	return ""
}

func (x *WorkflowDefinition) GetFunctions() []*FunctionDefinition {
	if x != nil {
		return x.Functions
	}
	return nil
}

func (x *WorkflowDefinition) GetEvents() []*EventDefinition {
	if x != nil {
		return x.Events
	}
	return nil
}

// FunctionDefinition represents a function in the workflow
type FunctionDefinition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Function name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Function type (rest, rpc, expression, etc.)
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// Function operation (URL, method, etc.)
	Operation string `protobuf:"bytes,3,opt,name=operation,proto3" json:"operation,omitempty"`
	// Function metadata
	Metadata      *structpb.Struct `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FunctionDefinition) Reset() {
	*x = FunctionDefinition{}
	mi := &file_workflow_events_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FunctionDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionDefinition) ProtoMessage() {}

func (x *FunctionDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_events_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionDefinition.ProtoReflect.Descriptor instead.
func (*FunctionDefinition) Descriptor() ([]byte, []int) {
	return file_workflow_events_proto_rawDescGZIP(), []int{11}
}

func (x *FunctionDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FunctionDefinition) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FunctionDefinition) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *FunctionDefinition) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// EventDefinition represents an event in the workflow
type EventDefinition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Event name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Event type
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// Event source
	Source string `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	// Event correlation rules
	Correlation   *structpb.Struct `protobuf:"bytes,4,opt,name=correlation,proto3" json:"correlation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventDefinition) Reset() {
	*x = EventDefinition{}
	mi := &file_workflow_events_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDefinition) ProtoMessage() {}

func (x *EventDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_events_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDefinition.ProtoReflect.Descriptor instead.
func (*EventDefinition) Descriptor() ([]byte, []int) {
	return file_workflow_events_proto_rawDescGZIP(), []int{12}
}

func (x *EventDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventDefinition) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *EventDefinition) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *EventDefinition) GetCorrelation() *structpb.Struct {
	if x != nil {
		return x.Correlation
	}
	return nil
}

// TaskRequestedEvent represents a task that needs to be executed
type TaskRequestedEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Workflow ID
	WorkflowId string `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	// Execution ID
	ExecutionId string `protobuf:"bytes,2,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	// Task name
	TaskName string `protobuf:"bytes,3,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	// Task input data
	Input *structpb.Struct `protobuf:"bytes,4,opt,name=input,proto3" json:"input,omitempty"`
	// Task configuration
	Config *TaskConfiguration `protobuf:"bytes,5,opt,name=config,proto3" json:"config,omitempty"`
	// Execution context
	Context       *ExecutionContext `protobuf:"bytes,6,opt,name=context,proto3" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskRequestedEvent) Reset() {
	*x = TaskRequestedEvent{}
	mi := &file_workflow_events_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskRequestedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRequestedEvent) ProtoMessage() {}

func (x *TaskRequestedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_events_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRequestedEvent.ProtoReflect.Descriptor instead.
func (*TaskRequestedEvent) Descriptor() ([]byte, []int) {
	return file_workflow_events_proto_rawDescGZIP(), []int{13}
}

func (x *TaskRequestedEvent) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *TaskRequestedEvent) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *TaskRequestedEvent) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *TaskRequestedEvent) GetInput() *structpb.Struct {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *TaskRequestedEvent) GetConfig() *TaskConfiguration {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *TaskRequestedEvent) GetContext() *ExecutionContext {
	if x != nil {
		return x.Context
	}
	return nil
}

// TaskConfiguration contains task execution configuration
type TaskConfiguration struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Task type (call, run, etc.)
	TaskType string `protobuf:"bytes,1,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	// Queue name
	Queue string `protobuf:"bytes,2,opt,name=queue,proto3" json:"queue,omitempty"`
	// Activity name
	ActivityName string `protobuf:"bytes,3,opt,name=activity_name,json=activityName,proto3" json:"activity_name,omitempty"`
	// Timeout configuration
	Timeout *TimeoutConfiguration `protobuf:"bytes,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// Retry configuration
	Retry *RetryConfiguration `protobuf:"bytes,5,opt,name=retry,proto3" json:"retry,omitempty"`
	// Task metadata
	Metadata      *structpb.Struct `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskConfiguration) Reset() {
	*x = TaskConfiguration{}
	mi := &file_workflow_events_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskConfiguration) ProtoMessage() {}

func (x *TaskConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_events_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskConfiguration.ProtoReflect.Descriptor instead.
func (*TaskConfiguration) Descriptor() ([]byte, []int) {
	return file_workflow_events_proto_rawDescGZIP(), []int{14}
}

func (x *TaskConfiguration) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *TaskConfiguration) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *TaskConfiguration) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *TaskConfiguration) GetTimeout() *TimeoutConfiguration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *TaskConfiguration) GetRetry() *RetryConfiguration {
	if x != nil {
		return x.Retry
	}
	return nil
}

func (x *TaskConfiguration) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// TimeoutConfiguration contains timeout settings
type TimeoutConfiguration struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Start to close timeout in seconds
	StartToCloseSeconds int32 `protobuf:"varint,1,opt,name=start_to_close_seconds,json=startToCloseSeconds,proto3" json:"start_to_close_seconds,omitempty"`
	// Schedule to start timeout in seconds
	ScheduleToStartSeconds int32 `protobuf:"varint,2,opt,name=schedule_to_start_seconds,json=scheduleToStartSeconds,proto3" json:"schedule_to_start_seconds,omitempty"`
	// Schedule to close timeout in seconds
	ScheduleToCloseSeconds int32 `protobuf:"varint,3,opt,name=schedule_to_close_seconds,json=scheduleToCloseSeconds,proto3" json:"schedule_to_close_seconds,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *TimeoutConfiguration) Reset() {
	*x = TimeoutConfiguration{}
	mi := &file_workflow_events_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeoutConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeoutConfiguration) ProtoMessage() {}

func (x *TimeoutConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_events_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeoutConfiguration.ProtoReflect.Descriptor instead.
func (*TimeoutConfiguration) Descriptor() ([]byte, []int) {
	return file_workflow_events_proto_rawDescGZIP(), []int{15}
}

func (x *TimeoutConfiguration) GetStartToCloseSeconds() int32 {
	if x != nil {
		return x.StartToCloseSeconds
	}
	return 0
}

func (x *TimeoutConfiguration) GetScheduleToStartSeconds() int32 {
	if x != nil {
		return x.ScheduleToStartSeconds
	}
	return 0
}

func (x *TimeoutConfiguration) GetScheduleToCloseSeconds() int32 {
	if x != nil {
		return x.ScheduleToCloseSeconds
	}
	return 0
}

// RetryConfiguration contains retry settings
type RetryConfiguration struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Maximum retry attempts
	MaxAttempts int32 `protobuf:"varint,1,opt,name=max_attempts,json=maxAttempts,proto3" json:"max_attempts,omitempty"`
	// Initial retry interval in seconds
	InitialIntervalSeconds int32 `protobuf:"varint,2,opt,name=initial_interval_seconds,json=initialIntervalSeconds,proto3" json:"initial_interval_seconds,omitempty"`
	// Backoff coefficient
	BackoffCoefficient float64 `protobuf:"fixed64,3,opt,name=backoff_coefficient,json=backoffCoefficient,proto3" json:"backoff_coefficient,omitempty"`
	// Maximum interval in seconds
	MaximumIntervalSeconds int32 `protobuf:"varint,4,opt,name=maximum_interval_seconds,json=maximumIntervalSeconds,proto3" json:"maximum_interval_seconds,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RetryConfiguration) Reset() {
	*x = RetryConfiguration{}
	mi := &file_workflow_events_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetryConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryConfiguration) ProtoMessage() {}

func (x *RetryConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_events_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryConfiguration.ProtoReflect.Descriptor instead.
func (*RetryConfiguration) Descriptor() ([]byte, []int) {
	return file_workflow_events_proto_rawDescGZIP(), []int{16}
}

func (x *RetryConfiguration) GetMaxAttempts() int32 {
	if x != nil {
		return x.MaxAttempts
	}
	return 0
}

func (x *RetryConfiguration) GetInitialIntervalSeconds() int32 {
	if x != nil {
		return x.InitialIntervalSeconds
	}
	return 0
}

func (x *RetryConfiguration) GetBackoffCoefficient() float64 {
	if x != nil {
		return x.BackoffCoefficient
	}
	return 0
}

func (x *RetryConfiguration) GetMaximumIntervalSeconds() int32 {
	if x != nil {
		return x.MaximumIntervalSeconds
	}
	return 0
}

// TaskCompletedEvent represents a completed task
type TaskCompletedEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Workflow ID
	WorkflowId string `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	// Execution ID
	ExecutionId string `protobuf:"bytes,2,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	// Task name
	TaskName string `protobuf:"bytes,3,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	// Task data (input/output)
	Data *TaskData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	// Execution context
	Context       *ExecutionContext `protobuf:"bytes,5,opt,name=context,proto3" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskCompletedEvent) Reset() {
	*x = TaskCompletedEvent{}
	mi := &file_workflow_events_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskCompletedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskCompletedEvent) ProtoMessage() {}

func (x *TaskCompletedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_events_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskCompletedEvent.ProtoReflect.Descriptor instead.
func (*TaskCompletedEvent) Descriptor() ([]byte, []int) {
	return file_workflow_events_proto_rawDescGZIP(), []int{17}
}

func (x *TaskCompletedEvent) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *TaskCompletedEvent) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *TaskCompletedEvent) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *TaskCompletedEvent) GetData() *TaskData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TaskCompletedEvent) GetContext() *ExecutionContext {
	if x != nil {
		return x.Context
	}
	return nil
}

var File_workflow_events_proto protoreflect.FileDescriptor

const file_workflow_events_proto_rawDesc = "" +
	"\n" +
	"\x15workflow_events.proto\x12\x0fflunq.worker.v1\x1a\x19google/protobuf/any.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/protobuf/struct.proto\"\xa5\x01\n" +
	"\bTaskData\x12-\n" +
	"\x05input\x18\x01 \x01(\v2\x17.google.protobuf.StructR\x05input\x12/\n" +
	"\x06output\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x06output\x129\n" +
	"\bmetadata\x18\x03 \x01(\v2\x1d.flunq.worker.v1.TaskMetadataR\bmetadata\"\xb3\x01\n" +
	"\rWorkflowInput\x12+\n" +
	"\x04data\x18\x01 \x01(\v2\x17.google.protobuf.StructR\x04data\x12:\n" +
	"\acontext\x18\x02 \x01(\v2 .flunq.worker.v1.WorkflowContextR\acontext\x129\n" +
	"\n" +
	"started_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\"\xb9\x01\n" +
	"\x0eWorkflowOutput\x12+\n" +
	"\x04data\x18\x01 \x01(\v2\x17.google.protobuf.StructR\x04data\x12;\n" +
	"\asummary\x18\x02 \x01(\v2!.flunq.worker.v1.ExecutionSummaryR\asummary\x12=\n" +
	"\fcompleted_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\"\xa6\x01\n" +
	"\x0fWorkflowContext\x12!\n" +
	"\fexecution_id\x18\x01 \x01(\tR\vexecutionId\x12%\n" +
	"\x0ecorrelation_id\x18\x02 \x01(\tR\rcorrelationId\x12\x18\n" +
	"\atrigger\x18\x03 \x01(\tR\atrigger\x12\x16\n" +
	"\x06tenant\x18\x04 \x01(\tR\x06tenant\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\tR\x06userId\"\xe1\x01\n" +
	"\x10ExecutionSummary\x12\x1f\n" +
	"\vtotal_tasks\x18\x01 \x01(\x05R\n" +
	"totalTasks\x12\x1f\n" +
	"\vduration_ms\x18\x02 \x01(\x03R\n" +
	"durationMs\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\x12)\n" +
	"\x10successful_tasks\x18\x05 \x01(\x05R\x0fsuccessfulTasks\x12!\n" +
	"\ffailed_tasks\x18\x06 \x01(\x05R\vfailedTasks\"\xfc\x02\n" +
	"\fTaskMetadata\x129\n" +
	"\n" +
	"started_at\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12=\n" +
	"\fcompleted_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\x12\x1f\n" +
	"\vduration_ms\x18\x03 \x01(\x03R\n" +
	"durationMs\x123\n" +
	"\x06status\x18\x04 \x01(\x0e2\x1b.flunq.worker.v1.TaskStatusR\x06status\x12#\n" +
	"\rerror_message\x18\x05 \x01(\tR\ferrorMessage\x12\x1f\n" +
	"\vretry_count\x18\x06 \x01(\x05R\n" +
	"retryCount\x12\x1b\n" +
	"\ttask_type\x18\a \x01(\tR\btaskType\x12\x14\n" +
	"\x05queue\x18\b \x01(\tR\x05queue\x12#\n" +
	"\ractivity_name\x18\t \x01(\tR\factivityName\"\xe2\x04\n" +
	"\rWorkflowState\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12!\n" +
	"\fcurrent_step\x18\x02 \x01(\tR\vcurrentStep\x127\n" +
	"\x06status\x18\x03 \x01(\x0e2\x1f.flunq.worker.v1.WorkflowStatusR\x06status\x125\n" +
	"\tvariables\x18\x04 \x01(\v2\x17.google.protobuf.StructR\tvariables\x12-\n" +
	"\x05input\x18\x05 \x01(\v2\x17.google.protobuf.StructR\x05input\x12/\n" +
	"\x06output\x18\x06 \x01(\v2\x17.google.protobuf.StructR\x06output\x12;\n" +
	"\acontext\x18\a \x01(\v2!.flunq.worker.v1.ExecutionContextR\acontext\x12G\n" +
	"\x0fcompleted_tasks\x18\b \x03(\v2\x1e.flunq.worker.v1.CompletedTaskR\x0ecompletedTasks\x12A\n" +
	"\rpending_tasks\x18\t \x03(\v2\x1c.flunq.worker.v1.PendingTaskR\fpendingTasks\x129\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xa2\x02\n" +
	"\x10ExecutionContext\x12!\n" +
	"\fexecution_id\x18\x01 \x01(\tR\vexecutionId\x12%\n" +
	"\x0ecorrelation_id\x18\x02 \x01(\tR\rcorrelationId\x12,\n" +
	"\x12parent_workflow_id\x18\x03 \x01(\tR\x10parentWorkflowId\x12$\n" +
	"\x0eparent_task_id\x18\x04 \x01(\tR\fparentTaskId\x12\x18\n" +
	"\atrigger\x18\x05 \x01(\tR\atrigger\x12!\n" +
	"\finitiated_by\x18\x06 \x01(\tR\vinitiatedBy\x12\x1b\n" +
	"\ttenant_id\x18\a \x01(\tR\btenantId\x12\x16\n" +
	"\x06region\x18\b \x01(\tR\x06region\"o\n" +
	"\rCompletedTask\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12-\n" +
	"\x04data\x18\x02 \x01(\v2\x19.flunq.worker.v1.TaskDataR\x04data\x12\x1b\n" +
	"\tnext_task\x18\x03 \x01(\tR\bnextTask\"\xe3\x01\n" +
	"\vPendingTask\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12-\n" +
	"\x05input\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x05input\x12\x1b\n" +
	"\ttask_type\x18\x03 \x01(\tR\btaskType\x12\x14\n" +
	"\x05queue\x18\x04 \x01(\tR\x05queue\x12#\n" +
	"\ractivity_name\x18\x05 \x01(\tR\factivityName\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\xf5\x02\n" +
	"\x12WorkflowDefinition\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x18\n" +
	"\aversion\x18\x04 \x01(\tR\aversion\x12!\n" +
	"\fspec_version\x18\x05 \x01(\tR\vspecVersion\x12>\n" +
	"\x0edsl_definition\x18\x06 \x01(\v2\x17.google.protobuf.StructR\rdslDefinition\x12\x1f\n" +
	"\vstart_state\x18\a \x01(\tR\n" +
	"startState\x12A\n" +
	"\tfunctions\x18\b \x03(\v2#.flunq.worker.v1.FunctionDefinitionR\tfunctions\x128\n" +
	"\x06events\x18\t \x03(\v2 .flunq.worker.v1.EventDefinitionR\x06events\"\x8f\x01\n" +
	"\x12FunctionDefinition\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x1c\n" +
	"\toperation\x18\x03 \x01(\tR\toperation\x123\n" +
	"\bmetadata\x18\x04 \x01(\v2\x17.google.protobuf.StructR\bmetadata\"\x8c\x01\n" +
	"\x0fEventDefinition\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x16\n" +
	"\x06source\x18\x03 \x01(\tR\x06source\x129\n" +
	"\vcorrelation\x18\x04 \x01(\v2\x17.google.protobuf.StructR\vcorrelation\"\x9d\x02\n" +
	"\x12TaskRequestedEvent\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12!\n" +
	"\fexecution_id\x18\x02 \x01(\tR\vexecutionId\x12\x1b\n" +
	"\ttask_name\x18\x03 \x01(\tR\btaskName\x12-\n" +
	"\x05input\x18\x04 \x01(\v2\x17.google.protobuf.StructR\x05input\x12:\n" +
	"\x06config\x18\x05 \x01(\v2\".flunq.worker.v1.TaskConfigurationR\x06config\x12;\n" +
	"\acontext\x18\x06 \x01(\v2!.flunq.worker.v1.ExecutionContextR\acontext\"\x9c\x02\n" +
	"\x11TaskConfiguration\x12\x1b\n" +
	"\ttask_type\x18\x01 \x01(\tR\btaskType\x12\x14\n" +
	"\x05queue\x18\x02 \x01(\tR\x05queue\x12#\n" +
	"\ractivity_name\x18\x03 \x01(\tR\factivityName\x12?\n" +
	"\atimeout\x18\x04 \x01(\v2%.flunq.worker.v1.TimeoutConfigurationR\atimeout\x129\n" +
	"\x05retry\x18\x05 \x01(\v2#.flunq.worker.v1.RetryConfigurationR\x05retry\x123\n" +
	"\bmetadata\x18\x06 \x01(\v2\x17.google.protobuf.StructR\bmetadata\"\xc1\x01\n" +
	"\x14TimeoutConfiguration\x123\n" +
	"\x16start_to_close_seconds\x18\x01 \x01(\x05R\x13startToCloseSeconds\x129\n" +
	"\x19schedule_to_start_seconds\x18\x02 \x01(\x05R\x16scheduleToStartSeconds\x129\n" +
	"\x19schedule_to_close_seconds\x18\x03 \x01(\x05R\x16scheduleToCloseSeconds\"\xdc\x01\n" +
	"\x12RetryConfiguration\x12!\n" +
	"\fmax_attempts\x18\x01 \x01(\x05R\vmaxAttempts\x128\n" +
	"\x18initial_interval_seconds\x18\x02 \x01(\x05R\x16initialIntervalSeconds\x12/\n" +
	"\x13backoff_coefficient\x18\x03 \x01(\x01R\x12backoffCoefficient\x128\n" +
	"\x18maximum_interval_seconds\x18\x04 \x01(\x05R\x16maximumIntervalSeconds\"\xe1\x01\n" +
	"\x12TaskCompletedEvent\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12!\n" +
	"\fexecution_id\x18\x02 \x01(\tR\vexecutionId\x12\x1b\n" +
	"\ttask_name\x18\x03 \x01(\tR\btaskName\x12-\n" +
	"\x04data\x18\x04 \x01(\v2\x19.flunq.worker.v1.TaskDataR\x04data\x12;\n" +
	"\acontext\x18\x05 \x01(\v2!.flunq.worker.v1.ExecutionContextR\acontext*\xc3\x01\n" +
	"\n" +
	"TaskStatus\x12\x1b\n" +
	"\x17TASK_STATUS_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13TASK_STATUS_PENDING\x10\x01\x12\x17\n" +
	"\x13TASK_STATUS_RUNNING\x10\x02\x12\x19\n" +
	"\x15TASK_STATUS_COMPLETED\x10\x03\x12\x16\n" +
	"\x12TASK_STATUS_FAILED\x10\x04\x12\x19\n" +
	"\x15TASK_STATUS_CANCELLED\x10\x05\x12\x18\n" +
	"\x14TASK_STATUS_RETRYING\x10\x06*\x81\x02\n" +
	"\x0eWorkflowStatus\x12\x1f\n" +
	"\x1bWORKFLOW_STATUS_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17WORKFLOW_STATUS_CREATED\x10\x01\x12\x1b\n" +
	"\x17WORKFLOW_STATUS_RUNNING\x10\x02\x12\x1d\n" +
	"\x19WORKFLOW_STATUS_COMPLETED\x10\x03\x12\x1a\n" +
	"\x16WORKFLOW_STATUS_FAILED\x10\x04\x12\x1d\n" +
	"\x19WORKFLOW_STATUS_CANCELLED\x10\x05\x12\x1d\n" +
	"\x19WORKFLOW_STATUS_SUSPENDED\x10\x06\x12\x1b\n" +
	"\x17WORKFLOW_STATUS_WAITING\x10\aB&Z$github.com/flunq-io/worker/proto/genb\x06proto3"

var (
	file_workflow_events_proto_rawDescOnce sync.Once
	file_workflow_events_proto_rawDescData []byte
)

func file_workflow_events_proto_rawDescGZIP() []byte {
	file_workflow_events_proto_rawDescOnce.Do(func() {
		file_workflow_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_workflow_events_proto_rawDesc), len(file_workflow_events_proto_rawDesc)))
	})
	return file_workflow_events_proto_rawDescData
}

var file_workflow_events_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_workflow_events_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_workflow_events_proto_goTypes = []any{
	(TaskStatus)(0),               // 0: flunq.worker.v1.TaskStatus
	(WorkflowStatus)(0),           // 1: flunq.worker.v1.WorkflowStatus
	(*TaskData)(nil),              // 2: flunq.worker.v1.TaskData
	(*WorkflowInput)(nil),         // 3: flunq.worker.v1.WorkflowInput
	(*WorkflowOutput)(nil),        // 4: flunq.worker.v1.WorkflowOutput
	(*WorkflowContext)(nil),       // 5: flunq.worker.v1.WorkflowContext
	(*ExecutionSummary)(nil),      // 6: flunq.worker.v1.ExecutionSummary
	(*TaskMetadata)(nil),          // 7: flunq.worker.v1.TaskMetadata
	(*WorkflowState)(nil),         // 8: flunq.worker.v1.WorkflowState
	(*ExecutionContext)(nil),      // 9: flunq.worker.v1.ExecutionContext
	(*CompletedTask)(nil),         // 10: flunq.worker.v1.CompletedTask
	(*PendingTask)(nil),           // 11: flunq.worker.v1.PendingTask
	(*WorkflowDefinition)(nil),    // 12: flunq.worker.v1.WorkflowDefinition
	(*FunctionDefinition)(nil),    // 13: flunq.worker.v1.FunctionDefinition
	(*EventDefinition)(nil),       // 14: flunq.worker.v1.EventDefinition
	(*TaskRequestedEvent)(nil),    // 15: flunq.worker.v1.TaskRequestedEvent
	(*TaskConfiguration)(nil),     // 16: flunq.worker.v1.TaskConfiguration
	(*TimeoutConfiguration)(nil),  // 17: flunq.worker.v1.TimeoutConfiguration
	(*RetryConfiguration)(nil),    // 18: flunq.worker.v1.RetryConfiguration
	(*TaskCompletedEvent)(nil),    // 19: flunq.worker.v1.TaskCompletedEvent
	(*structpb.Struct)(nil),       // 20: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil), // 21: google.protobuf.Timestamp
}
var file_workflow_events_proto_depIdxs = []int32{
	20, // 0: flunq.worker.v1.TaskData.input:type_name -> google.protobuf.Struct
	20, // 1: flunq.worker.v1.TaskData.output:type_name -> google.protobuf.Struct
	7,  // 2: flunq.worker.v1.TaskData.metadata:type_name -> flunq.worker.v1.TaskMetadata
	20, // 3: flunq.worker.v1.WorkflowInput.data:type_name -> google.protobuf.Struct
	5,  // 4: flunq.worker.v1.WorkflowInput.context:type_name -> flunq.worker.v1.WorkflowContext
	21, // 5: flunq.worker.v1.WorkflowInput.started_at:type_name -> google.protobuf.Timestamp
	20, // 6: flunq.worker.v1.WorkflowOutput.data:type_name -> google.protobuf.Struct
	6,  // 7: flunq.worker.v1.WorkflowOutput.summary:type_name -> flunq.worker.v1.ExecutionSummary
	21, // 8: flunq.worker.v1.WorkflowOutput.completed_at:type_name -> google.protobuf.Timestamp
	21, // 9: flunq.worker.v1.TaskMetadata.started_at:type_name -> google.protobuf.Timestamp
	21, // 10: flunq.worker.v1.TaskMetadata.completed_at:type_name -> google.protobuf.Timestamp
	0,  // 11: flunq.worker.v1.TaskMetadata.status:type_name -> flunq.worker.v1.TaskStatus
	1,  // 12: flunq.worker.v1.WorkflowState.status:type_name -> flunq.worker.v1.WorkflowStatus
	20, // 13: flunq.worker.v1.WorkflowState.variables:type_name -> google.protobuf.Struct
	20, // 14: flunq.worker.v1.WorkflowState.input:type_name -> google.protobuf.Struct
	20, // 15: flunq.worker.v1.WorkflowState.output:type_name -> google.protobuf.Struct
	9,  // 16: flunq.worker.v1.WorkflowState.context:type_name -> flunq.worker.v1.ExecutionContext
	10, // 17: flunq.worker.v1.WorkflowState.completed_tasks:type_name -> flunq.worker.v1.CompletedTask
	11, // 18: flunq.worker.v1.WorkflowState.pending_tasks:type_name -> flunq.worker.v1.PendingTask
	21, // 19: flunq.worker.v1.WorkflowState.created_at:type_name -> google.protobuf.Timestamp
	21, // 20: flunq.worker.v1.WorkflowState.updated_at:type_name -> google.protobuf.Timestamp
	2,  // 21: flunq.worker.v1.CompletedTask.data:type_name -> flunq.worker.v1.TaskData
	20, // 22: flunq.worker.v1.PendingTask.input:type_name -> google.protobuf.Struct
	21, // 23: flunq.worker.v1.PendingTask.created_at:type_name -> google.protobuf.Timestamp
	20, // 24: flunq.worker.v1.WorkflowDefinition.dsl_definition:type_name -> google.protobuf.Struct
	13, // 25: flunq.worker.v1.WorkflowDefinition.functions:type_name -> flunq.worker.v1.FunctionDefinition
	14, // 26: flunq.worker.v1.WorkflowDefinition.events:type_name -> flunq.worker.v1.EventDefinition
	20, // 27: flunq.worker.v1.FunctionDefinition.metadata:type_name -> google.protobuf.Struct
	20, // 28: flunq.worker.v1.EventDefinition.correlation:type_name -> google.protobuf.Struct
	20, // 29: flunq.worker.v1.TaskRequestedEvent.input:type_name -> google.protobuf.Struct
	16, // 30: flunq.worker.v1.TaskRequestedEvent.config:type_name -> flunq.worker.v1.TaskConfiguration
	9,  // 31: flunq.worker.v1.TaskRequestedEvent.context:type_name -> flunq.worker.v1.ExecutionContext
	17, // 32: flunq.worker.v1.TaskConfiguration.timeout:type_name -> flunq.worker.v1.TimeoutConfiguration
	18, // 33: flunq.worker.v1.TaskConfiguration.retry:type_name -> flunq.worker.v1.RetryConfiguration
	20, // 34: flunq.worker.v1.TaskConfiguration.metadata:type_name -> google.protobuf.Struct
	2,  // 35: flunq.worker.v1.TaskCompletedEvent.data:type_name -> flunq.worker.v1.TaskData
	9,  // 36: flunq.worker.v1.TaskCompletedEvent.context:type_name -> flunq.worker.v1.ExecutionContext
	37, // [37:37] is the sub-list for method output_type
	37, // [37:37] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_workflow_events_proto_init() }
func file_workflow_events_proto_init() {
	if File_workflow_events_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_workflow_events_proto_rawDesc), len(file_workflow_events_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_workflow_events_proto_goTypes,
		DependencyIndexes: file_workflow_events_proto_depIdxs,
		EnumInfos:         file_workflow_events_proto_enumTypes,
		MessageInfos:      file_workflow_events_proto_msgTypes,
	}.Build()
	File_workflow_events_proto = out.File
	file_workflow_events_proto_goTypes = nil
	file_workflow_events_proto_depIdxs = nil
}
