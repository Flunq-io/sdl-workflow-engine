# Example: User Onboarding Workflow
# This workflow demonstrates a typical user onboarding process

id: user-onboarding
version: '0.8'
specVersion: '0.8'
name: User Onboarding Workflow
description: Complete user onboarding process with email verification and profile setup

start: validate-user-data

functions:
  - name: validate-email
    operation: http://executor:8083/api/v1/execute
    type: rest
  - name: create-user-account
    operation: http://executor:8083/api/v1/execute
    type: rest
  - name: send-welcome-email
    operation: http://executor:8083/api/v1/execute
    type: rest
  - name: setup-user-profile
    operation: http://executor:8083/api/v1/execute
    type: rest
  - name: notify-admin
    operation: http://executor:8083/api/v1/execute
    type: rest

events:
  - name: email-verified
    source: email-service
    type: user.email.verified
  - name: profile-completed
    source: profile-service
    type: user.profile.completed

states:
  - name: validate-user-data
    type: operation
    actions:
      - name: validate-email-action
        functionRef:
          refName: validate-email
          arguments:
            method: POST
            url: "https://api.emailvalidation.io/v1/info"
            headers:
              apikey: "${secrets.email_validation_key}"
            body:
              email: "${.user.email}"
    transition: create-account
    onErrors:
      - errorRef: validation-error
        transition: validation-failed

  - name: create-account
    type: operation
    actions:
      - name: create-user-action
        functionRef:
          refName: create-user-account
          arguments:
            method: POST
            url: "https://api.internal.com/users"
            headers:
              Authorization: "Bearer ${secrets.api_token}"
            body:
              email: "${.user.email}"
              name: "${.user.name}"
              plan: "${.user.plan | default('free')}"
    transition: send-welcome

  - name: send-welcome
    type: operation
    actions:
      - name: send-welcome-email-action
        functionRef:
          refName: send-welcome-email
          arguments:
            method: POST
            url: "https://api.sendgrid.com/v3/mail/send"
            headers:
              Authorization: "Bearer ${secrets.sendgrid_key}"
            body:
              personalizations:
                - to:
                    - email: "${.user.email}"
                      name: "${.user.name}"
              from:
                email: "welcome@flunq.io"
                name: "Flunq.io Team"
              template_id: "d-123456789"
              dynamic_template_data:
                user_name: "${.user.name}"
                verification_link: "https://app.flunq.io/verify?token=${.verification_token}"
    transition: wait-for-verification

  - name: wait-for-verification
    type: event
    onEvents:
      - eventRefs:
          - email-verified
        actions:
          - name: log-verification
            functionRef:
              refName: notify-admin
              arguments:
                method: POST
                url: "https://api.internal.com/admin/notifications"
                body:
                  type: "user_verified"
                  user_id: "${.user.id}"
                  timestamp: "${now()}"
        transition: setup-profile
    timeouts:
      eventTimeout: PT24H  # 24 hours
    onErrors:
      - errorRef: timeout-error
        transition: verification-timeout

  - name: setup-profile
    type: parallel
    branches:
      - name: create-profile
        actions:
          - name: setup-profile-action
            functionRef:
              refName: setup-user-profile
              arguments:
                method: POST
                url: "https://api.internal.com/profiles"
                body:
                  user_id: "${.user.id}"
                  preferences:
                    theme: "light"
                    notifications: true
      - name: setup-billing
        actions:
          - name: setup-billing-action
            functionRef:
              refName: create-user-account
              arguments:
                method: POST
                url: "https://api.stripe.com/v1/customers"
                headers:
                  Authorization: "Bearer ${secrets.stripe_key}"
                body:
                  email: "${.user.email}"
                  name: "${.user.name}"
    completionType: allOf
    transition: onboarding-complete

  - name: onboarding-complete
    type: inject
    data:
      status: "completed"
      completed_at: "${now()}"
      user_id: "${.user.id}"
    end: true

  - name: validation-failed
    type: inject
    data:
      status: "failed"
      reason: "Email validation failed"
      failed_at: "${now()}"
    end: true

  - name: verification-timeout
    type: operation
    actions:
      - name: send-reminder-email
        functionRef:
          refName: send-welcome-email
          arguments:
            method: POST
            url: "https://api.sendgrid.com/v3/mail/send"
            body:
              personalizations:
                - to:
                    - email: "${.user.email}"
              template_id: "d-reminder-123"
    end: true

errors:
  - name: validation-error
    code: "VALIDATION_FAILED"
  - name: timeout-error
    code: "VERIFICATION_TIMEOUT"

retries:
  - name: default-retry
    delay: PT5S
    maxAttempts: 3
    multiplier: 2.0
    maxDelay: PT1M
